"use client"

import { useState, useEffect, useRef, useCallback } from "react"
import { useRouter } from "next/navigation"
import { Card, CardContent } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { cn } from "@/lib/utils"
import api from "@/lib/api"
import { useAuth } from "@/components/auth"
import { nanoid } from "nanoid"

// –¢–∏–ø—ã –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
interface Document {
  id: string;
  title: string;
  content: any;
  parent: string | null;
}

interface DocumentEditorProps {
  document: Document;
  onChange: (document: Document) => void;
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫—É—Ä—Å–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
interface RemoteCursor {
  id: string;
  username: string;
  color: string;
  position: {
    blockIndex: number;
    offset: number;
  } | null;
  timestamp: number;
}

// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
interface EditorApi {
  blocks: {
    insert: (type: string, data?: any) => void;
  };
  save: () => Promise<any>;
}

interface WebSocketError extends Event {
  error?: Error;
  message?: string;
}

// –ö–∞—Å—Ç–æ–º–Ω—ã–π –±–ª–æ–∫ –¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
const NestedDocumentTool = {
  class: class {
    api: any;
    data: {
      id: string;
      title: string;
    };
    block: HTMLElement;
    
    static get toolbox() {
      return {
        title: '–í–ª–æ–∂–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç',
        icon: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M19 5V19H5V5H19ZM21 3H3V21H21V3ZM17 7H7V9H17V7ZM14 11H7V13H14V11Z" fill="currentColor"/></svg>'
      };
    }

    constructor({ data, api, block }: { data: any, api: any, block: HTMLElement }) {
      this.api = api;
      this.data = data || { id: '', title: '–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç' };
      this.block = block;
    }

    async render() {
      const wrapper = document.createElement('div');
      wrapper.classList.add('nested-document-block');
      wrapper.style.padding = '15px';
      wrapper.style.border = '1px solid #e2e8f0';
      wrapper.style.borderRadius = '6px';
      wrapper.style.marginBottom = '15px';
      wrapper.style.backgroundColor = '#f8fafc';
      wrapper.style.cursor = 'pointer';
      
      const icon = document.createElement('span');
      icon.innerHTML = 'üìÑ';
      icon.style.marginRight = '10px';
      
      const title = document.createElement('span');
      title.textContent = this.data.title;
      title.style.fontWeight = 'bold';
      
      wrapper.appendChild(icon);
      wrapper.appendChild(title);
      
      // –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
      if (this.data.id) {
        wrapper.addEventListener('click', () => {
          window.location.href = `/documents/${this.data.id}`;
        });
      } else {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
        try {
          const response = await fetch('/api/documents/', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${localStorage.getItem('accessToken')}`
            },
            body: JSON.stringify({
              title: this.data.title,
              parent: window.location.pathname.split('/').pop()
            })
          });
          
          const newDoc = await response.json();
          this.data.id = newDoc.id;
          
          // –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
          wrapper.addEventListener('click', () => {
            window.location.href = `/documents/${this.data.id}`;
          });
        } catch (err) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', err);
        }
      }
      
      return wrapper;
    }

    save() {
      return this.data;
    }
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –¥–ª—è –∫—É—Ä—Å–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getRandomColor() {
  const colors = [
    '#FF6B6B', // –∫—Ä–∞—Å–Ω—ã–π
    '#4ECDC4', // –±–∏—Ä—é–∑–æ–≤—ã–π
    '#FFE66D', // –∂–µ–ª—Ç—ã–π
    '#6A0572', // —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
    '#1A936F', // –∑–µ–ª–µ–Ω—ã–π
    '#FF9F1C', // –æ—Ä–∞–Ω–∂–µ–≤—ã–π
    '#7D5BA6', // –ø—É—Ä–ø—É—Ä–Ω—ã–π
    '#3185FC', // —Å–∏–Ω–∏–π
    '#FF5964', // –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π
    '#25A18E', // –º–æ—Ä—Å–∫–æ–π
  ];
  return colors[Math.floor(Math.random() * colors.length)];
}

export function DocumentEditor({ document, onChange }: DocumentEditorProps) {
  const [title, setTitle] = useState(document.title)
  const editorRef = useRef<HTMLDivElement>(null)
  const editorInstanceRef = useRef<any>(null)
  const cursorIdRef = useRef(nanoid())
  const cursorPositionRef = useRef<{blockIndex: number, offset: number} | null>(null)
  const wsRef = useRef<WebSocket | null>(null)
  const router = useRouter()
  const { user } = useAuth()

  // –ö–æ–º–∞–Ω–¥—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  const editorCommands = [
    {
      name: "–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2-–≥–æ —É—Ä–æ–≤–Ω—è",
      icon: "H2",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("header", { level: 2, text: "" })
        }
      }
    },
    {
      name: "–ó–∞–≥–æ–ª–æ–≤–æ–∫ 3-–≥–æ —É—Ä–æ–≤–Ω—è",
      icon: "H3",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("header", { level: 3, text: "" })
        }
      }
    },
    {
      name: "–ó–∞–≥–æ–ª–æ–≤–æ–∫ 4-–≥–æ —É—Ä–æ–≤–Ω—è",
      icon: "H4",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("header", { level: 4, text: "" })
        }
      }
    },
    {
      name: "–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫",
      icon: "1.",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("list", { style: "ordered" })
        }
      }
    },
    {
      name: "–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫",
      icon: "‚Ä¢",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("list", { style: "unordered" })
        }
      }
    },
    {
      name: "–ß–µ–∫–±–æ–∫—Å (–∑–∞–¥–∞—á–∞)",
      icon: "‚òê",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("checklist")
        }
      }
    },
    {
      name: "–í—Å—Ç–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è",
      icon: "üñºÔ∏è",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("image")
        }
      }
    },
    {
      name: "–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç",
      icon: "üìÑ",
      action: () => {
        if (editorInstanceRef.current) {
          editorInstanceRef.current.blocks.insert("nestedDocument")
        }
      }
    }
  ]

  // WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è WebSocket
    if (typeof window === 'undefined' || !document.id || !user) {
      console.log('–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é WebSocket: –Ω–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É WebSocket –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    if (typeof WebSocket === 'undefined') {
      console.warn('WebSocket –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
      return;
    }

    // –û—Ç–∫–ª—é—á–∞–µ–º WebSocket –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –µ—Å–ª–∏ –Ω–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    // –í–∫–ª—é—á–∏—Ç–µ —ç—Ç—É –æ–ø—Ü–∏—é, –µ—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ WebSocket –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    const DISABLE_WEBSOCKET = true;
    if (DISABLE_WEBSOCKET) {
      console.log('WebSocket –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ DISABLE_WEBSOCKET');
      return;
    }

    let ws: WebSocket | null = null;
    let reconnectAttempts = 0;
    const maxReconnectAttempts = 5;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä URL —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    let wsUrl;
    try {
      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
      const host = window.location.host;
      wsUrl = `${protocol}//${host}/ws/documents/${document.id}/`;
      console.log('–°–æ–∑–¥–∞–Ω URL –¥–ª—è WebSocket:', wsUrl);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ URL –¥–ª—è WebSocket:', err);
      return;
    }

    const connectWebSocket = () => {
      if (reconnectAttempts >= maxReconnectAttempts) {
        console.warn(`–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket (${maxReconnectAttempts})`);
        return;
      }

      try {
        console.log(`–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket (${reconnectAttempts + 1}/${maxReconnectAttempts})...`);
        
        // –°–æ–∑–¥–∞–µ–º WebSocket —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        ws = new WebSocket(wsUrl);
        wsRef.current = ws;
        
        // –¢–∞–π–º–∞—É—Ç –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        const connectionTimeout = setTimeout(() => {
          if (ws && ws.readyState !== WebSocket.OPEN) {
            console.warn('–¢–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è WebSocket');
            ws.close();
          }
        }, 5000);

        ws.onopen = () => {
          clearTimeout(connectionTimeout);
          console.log('WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
          reconnectAttempts = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
          
          if (ws && ws.readyState === WebSocket.OPEN) {
            try {
              ws.send(JSON.stringify({
                type: 'cursor_connect',
                user_id: user.id,
                username: user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                cursor_id: cursorIdRef.current,
                color: getRandomColor()
              }));
              console.log('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏');
            } catch (sendErr) {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:', sendErr);
            }
          }
        };

        ws.onmessage = (event) => {
          try {
            const data = JSON.parse(event.data);
            console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ WebSocket:', data.type);
            
            if (data.type === 'document_update' && 
                data.sender_id !== cursorIdRef.current && 
                editorInstanceRef.current) {
              try {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ render —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
                if (typeof editorInstanceRef.current.render === 'function') {
                  const renderResult = editorInstanceRef.current.render(data.content);
                  
                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–∏ render –ø—Ä–æ–º–∏—Å
                  if (renderResult && typeof renderResult.catch === 'function') {
                    renderResult.catch((err: Error) => {
                      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebSocket:', err.message || err);
                    });
                  }
                }
              } catch (renderErr) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ render:', renderErr);
              }
            }
          } catch (parseErr) {
            console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è WebSocket:', parseErr);
          }
        };

        ws.onerror = (error: Event) => {
          clearTimeout(connectionTimeout);
          
          // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É WebSocket
          console.warn('WebSocket –æ—à–∏–±–∫–∞:', {
            type: error.type,
            timeStamp: error.timeStamp
          });
        };

        ws.onclose = (event) => {
          clearTimeout(connectionTimeout);
          
          console.log('WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ:', 
            event.code, 
            event.reason || '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞',
            event.wasClean ? '(–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)' : '(–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)'
          );
          
          wsRef.current = null;
          
          // –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ
          // –∏ –º—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫
          if (!event.wasClean && reconnectAttempts < maxReconnectAttempts) {
            reconnectAttempts++;
            // Exponential backoff: 1s, 2s, 4s, 8s, 16s
            const delay = Math.min(1000 * Math.pow(2, reconnectAttempts - 1), 16000);
            console.log(`–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ ${delay/1000} —Å–µ–∫—É–Ω–¥...`);
            
            setTimeout(connectWebSocket, delay);
          }
        };
      } catch (err) {
        console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ WebSocket:', err);
        wsRef.current = null;
        
        // –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        if (reconnectAttempts < maxReconnectAttempts) {
          reconnectAttempts++;
          const delay = Math.min(1000 * Math.pow(2, reconnectAttempts - 1), 16000);
          setTimeout(connectWebSocket, delay);
        }
      }
    };

    // –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –ø–µ—Ä–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
    const initTimeout = setTimeout(() => {
      connectWebSocket();
    }, 500);

    return () => {
      clearTimeout(initTimeout);
      
      if (ws) {
        try {
          if (ws.readyState === WebSocket.OPEN || ws.readyState === WebSocket.CONNECTING) {
            ws.close(1000, '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
          }
        } catch (err) {
          console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ WebSocket:', err);
        }
      }
    };
  }, [document.id, user]);

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ –∫—É—Ä—Å–æ—Ä–∞
  const sendCursorPosition = (position: {blockIndex: number, offset: number} | null) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å WebSocket –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    if (!wsRef.current || wsRef.current.readyState !== WebSocket.OPEN) return;
    
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
      cursorPositionRef.current = position;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∑–∏—Ü–∏–∏
      wsRef.current.send(JSON.stringify({
        type: 'cursor_update',
        cursor_id: cursorIdRef.current,
        position,
        username: user?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
      }));
    } catch (err) {
      console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–∑–∏—Ü–∏–∏ –∫—É—Ä—Å–æ—Ä–∞:', err);
    }
  };

  // –ü–µ—Ä–≤—ã–π render —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
  const isFirstRender = useRef(true);
  
  // –§–ª–∞–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  const isSavingRef = useRef(false);
  
  // –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
  const lastContentRef = useRef<any>(null);
  
  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥–æ–º
  const saveTimeoutRef = useRef<NodeJS.Timeout | null>(null);
  
  const triggerAutosave = useCallback((content: any) => {
    // –ï—Å–ª–∏ —É–∂–µ –∏–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    if (isSavingRef.current) return;
    
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    if (lastContentRef.current && 
        JSON.stringify(lastContentRef.current) === JSON.stringify(content)) {
      console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ');
      return;
    }
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
    if (saveTimeoutRef.current) {
      clearTimeout(saveTimeoutRef.current);
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å –±–æ–ª—å—à–∏–º –¥–µ–±–∞—É–Ω—Å–æ–º
    saveTimeoutRef.current = setTimeout(async () => {
      try {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        isSavingRef.current = true;
        
        console.log('–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        lastContentRef.current = content;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        await api.put(`/documents/${document.id}/`, {
          title,
          content,
          parent: document.parent
        });
        
        console.log('–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ WebSocket, –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ
        if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {
          wsRef.current.send(JSON.stringify({
            type: 'document_update',
            content,
            sender_id: cursorIdRef.current
          }));
        }
      } catch (error: any) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', error.message);
      } finally {
        // –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        isSavingRef.current = false;
      }
    }, 3000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ 3 —Å–µ–∫—É–Ω–¥
  }, [document.id, document.parent, title]);

  // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä EditorJS
  useEffect(() => {
    // –î–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –Ω–µ–Ω—É–∂–Ω—ã—Ö –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    if (!isFirstRender.current && editorInstanceRef.current) {
      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
      console.log("–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
      return;
    }
    
    isFirstRender.current = false;
    
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç EditorJS –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
    const initEditor = async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –∏ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (typeof window === "undefined") {
          console.log("–ù–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é EditorJS");
          return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–∞
        if (!editorRef.current) {
          console.log("DOM —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é");
          return;
        }

        console.log("–ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...");

        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        const [
          EditorJSModule,
          HeaderModule,
          ListModule,
          ChecklistModule,
          ImageModule
        ] = await Promise.all([
          import('@editorjs/editorjs'),
          import('@editorjs/header'),
          import('@editorjs/list'),
          import('@editorjs/checklist'),
          import('@editorjs/image')
        ]);

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª–∞—Å—Å—ã –∏–∑ –º–æ–¥—É–ª–µ–π
        const EditorJS = EditorJSModule.default;
        const Header = HeaderModule.default;
        const List = ListModule.default;
        const Checklist = ChecklistModule.default;
        const Image = ImageModule.default;

        // –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –µ–≥–æ
        if (editorInstanceRef.current) {
          try {
            console.log("–£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...");
            
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
            if (typeof editorInstanceRef.current.destroy === 'function') {
              const destroyPromise = editorInstanceRef.current.destroy();
              if (destroyPromise && typeof destroyPromise.then === 'function') {
                await destroyPromise;
              }
            } else {
              console.log("–ú–µ—Ç–æ–¥ destroy –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞–ø—Ä—è–º—É—é");
            }
          } catch (destroyError) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:", destroyError);
          }
          
          // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
          editorInstanceRef.current = null;
        }

        console.log("–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...");
        console.log("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:", document.content);

        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        let editorData;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö
        if (document.content && 
            typeof document.content === 'object' && 
            document.content.blocks && 
            Array.isArray(document.content.blocks)) {
          // –ò–º–µ–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
          editorData = {
            time: document.content.time || new Date().getTime(),
            version: document.content.version || "2.27.0",
            blocks: document.content.blocks
          };
        } else if (document.content && typeof document.content === 'string') {
          // –î–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏, –ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å
          try {
            const parsedContent = JSON.parse(document.content);
            editorData = {
              time: parsedContent.time || new Date().getTime(),
              version: parsedContent.version || "2.27.0",
              blocks: Array.isArray(parsedContent.blocks) ? parsedContent.blocks : []
            };
          } catch (parseErr) {
            console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞:", parseErr);
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
            editorData = {
              time: new Date().getTime(),
              version: "2.27.0",
              blocks: []
            };
          }
        } else {
          // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
          console.log("–°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –¥–æ–∫—É–º–µ–Ω—Ç, —Ç–∞–∫ –∫–∞–∫ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω");
          editorData = {
            time: new Date().getTime(),
            version: "2.27.0",
            blocks: []
          };
        }
        
        console.log("–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞:", editorData);

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        console.log("–°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä EditorJS...");
        const editor = new EditorJS({
          holder: editorRef.current,
          data: editorData,
          onReady: () => {
            console.log('Editor.js –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
            editorInstanceRef.current = editor;
          },
          onChange: function(api: any) {
            try {
              // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–µ–π—á–∞—Å –∏–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
              if (isSavingRef.current) return;
              
              // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å —è–≤–Ω—ã–º this
              editor.save().then((outputData: any) => {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –±–µ–∑ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
                onChange({ ...document, content: outputData, title });
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
                triggerAutosave(outputData);
              }).catch((saveErr: Error) => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', saveErr);
              });
            } catch (err) {
              console.error('–û—à–∏–±–∫–∞ –≤ onChange:', err);
            }
          },
          autofocus: true,
          placeholder: '–ù–∞–∂–º–∏—Ç–µ "/" –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥',
          tools: {
            header: {
              class: Header,
              inlineToolbar: true,
              shortcut: 'CMD+SHIFT+H',
              config: {
                placeholder: '–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫',
                levels: [2, 3, 4],
                defaultLevel: 2
              }
            },
            list: {
              class: List,
              inlineToolbar: true,
              config: {
                defaultStyle: 'unordered'
              }
            },
            checklist: {
              class: Checklist,
              inlineToolbar: true
            },
            image: {
              class: Image,
              config: {
                endpoints: {
                  byFile: '/api/upload-image/'
                }
              }
            },
            nestedDocument: NestedDocumentTool
          },
          i18n: {
            messages: {
              ui: {
                "blockTunes": {
                  "toggler": {
                    "Click to tune": "–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å",
                  }
                },
                "inlineToolbar": {
                  "converter": {
                    "Convert to": "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤"
                  }
                },
                "toolbar": {
                  "toolbox": {
                    "Add": "–î–æ–±–∞–≤–∏—Ç—å"
                  }
                }
              },
              toolNames: {
                "Text": "–¢–µ–∫—Å—Ç",
                "Heading": "–ó–∞–≥–æ–ª–æ–≤–æ–∫",
                "List": "–°–ø–∏—Å–æ–∫",
                "Checklist": "–ß–µ–∫-–ª–∏—Å—Ç",
                "Image": "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
                "Nested Document": "–í–ª–æ–∂–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç"
              },
              tools: {
                "header": {
                  "Heading 2": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2-–≥–æ —É—Ä–æ–≤–Ω—è",
                  "Heading 3": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ 3-–≥–æ —É—Ä–æ–≤–Ω—è",
                  "Heading 4": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ 4-–≥–æ —É—Ä–æ–≤–Ω—è"
                },
                "list": {
                  "Unordered": "–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫",
                  "Ordered": "–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫"
                }
              }
            }
          }
        });
        
        console.log("–≠–∫–∑–µ–º–ø–ª—è—Ä EditorJS —Å–æ–∑–¥–∞–Ω");
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ EditorJS:', err);
      }
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
    console.log("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ EditorJS...");
    const timer = setTimeout(() => {
      initEditor();
    }, 300); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏

    return () => {
      console.log("–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ DocumentEditor");
      clearTimeout(timer);
      
      if (editorInstanceRef.current) {
        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ destroy —Ñ—É–Ω–∫—Ü–∏–µ–π
          if (typeof editorInstanceRef.current.destroy === 'function') {
            // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ EditorJS –º–æ–≥—É—Ç –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–æ–º–∏—Å –∏–∑ destroy
            const destroyResult = editorInstanceRef.current.destroy();
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –µ—Å–ª–∏ destroy –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å
            if (destroyResult && typeof destroyResult.then === 'function') {
              destroyResult.then(() => {
                console.log('–†–µ–¥–∞–∫—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
              }).catch((err: Error) => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞:', err.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
              });
            }
          } else {
            console.log('–ú–µ—Ç–æ–¥ destroy –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –æ—á–∏—Å—Ç–∫—É');
          }
        } catch (err) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä:', err);
        } finally {
          editorInstanceRef.current = null;
        }
      }
    };
  }, [document.id]); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç ID –¥–æ–∫—É–º–µ–Ω—Ç–∞

  // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    return () => {
      if (saveTimeoutRef.current) {
        clearTimeout(saveTimeoutRef.current);
      }
    };
  }, []);

  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newTitle = e.target.value;
    setTitle(newTitle);
    onChange({ ...document, title: newTitle });
  };

  return (
    <div className="flex flex-col gap-4 w-full max-w-4xl mx-auto">
      {/* –ü–æ–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ */}
      <Input
        type="text"
        value={title}
        onChange={handleTitleChange}
        className="border-none text-3xl font-bold focus-visible:ring-0 px-0 bg-transparent"
        placeholder="–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"
      />
      
      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è EditorJS */}
      <Card className={cn("border-none shadow-none")}>
        <CardContent className="p-0">
          <div 
            ref={editorRef} 
            className="prose prose-sm sm:prose lg:prose-lg xl:prose-xl max-w-none editor-js-container"
          />
        </CardContent>
      </Card>

      {/* –°—Ç–∏–ª–∏ –¥–ª—è EditorJS */}
      <style jsx global>{`
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
        .ce-header {
          padding: 0.5em 0;
          margin: 0;
          line-height: 1.25em;
        }
        
        h2.ce-header {
          font-size: 1.75em;
          font-weight: 700;
        }
        
        h3.ce-header {
          font-size: 1.5em;
          font-weight: 600;
        }
        
        h4.ce-header {
          font-size: 1.25em;
          font-weight: 600;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ */
        .cdx-list {
          margin: 0;
          padding-left: 40px;
          outline: none;
        }
        
        .cdx-list__item {
          padding: 5px 0;
          line-height: 1.5em;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —á–µ–∫–ª–∏—Å—Ç–æ–≤ */
        .cdx-checklist__item {
          display: flex;
          align-items: flex-start;
          padding: 5px 0;
        }
        
        .cdx-checklist__item-checkbox {
          margin-right: 10px;
          cursor: pointer;
        }
        
        /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ –¥–ª—è –±–ª–æ–∫–æ–≤ */
        .ce-block {
          padding: 0.4em 0;
        }
        
        .ce-block__content {
          max-width: 100%;
          margin: 0 auto;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Ç—É–ª–±–∞—Ä–∞ */
        .ce-toolbar__content {
          max-width: 100%;
        }
        
        .ce-toolbar__plus {
          color: #5a67d8;
        }
        
        .ce-toolbar__settings-btn {
          color: #5a67d8;
        }
      `}</style>
    </div>
  )
} 